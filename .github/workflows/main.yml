name: react buld                     # Workflow 이름
on: 
  push:                           # Event 감지
    branches :
      - actionTEST # 해당 브랜치에서 push가 일어날때 실행

defaults: 
  run: 
    working-directory: ./client # 실행되는 폴더 경로 저장

jobs:                                 # Job 설정
  build:                              # Job ID
    name: react build start        # Job 이름
    runs-on: ubuntu-18.04             # Job 가상환경 인스턴스
    env:
      CI: false # Treating warnings as errors because process.env.CI = true. 경고가 에러로 나와서
      working-directory: ./client
      
    strategy:
      matrix:
        node-version: [12.13.0]     # 12.13.0 버전 실행
        

    steps:                            # Steps
      - name: checkout source code    # 파일 가져오기
        uses: actions/checkout@v2  # 브랜치 확인
        with:
          ref: 'actionTEST'

      - name: use node version ${{matrix.node-version}} # 노드 버전 설치
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ${{env.working-directory}}/package-lock.json

      # - name: cache node modules # node_models를 캐시하여 매번npm install 시간 아끼기
      #   uses: actions/cache@v2
      #   with:
      #     path: node_modules # 저장할 대상 폴더
      #     key: ${{runner.OS}}-build-${{hashFiles('**/yarn.lock')}} # 저장후 식별 가능 키값, runner.os 는 리눅스가 된다고 한다.
      #     restore-keys: |     # 키가 일치한게 없을때 차선책의 키(옵션)
      #       ${{ runner.OS }}-build-
      #       ${{ runner.OS }}-

      - name: rm p l
        run: rm package-lock.json

      - name: npm install           # 설치
        run: npm install
        # working-directory: ${{ env.working-directory }}

      # .env파일 만들기!

      # - name: .env파일 만들기
      #   env:
      #     REACT_APP_DEV_API: ${{ secrets.REACT_APP_DEV_API}}
      #     REACT_APP_DEV_CHAT: ${{ secrets.REACT_APP_DEV_CHAT}}
      #     ## Firebase
      #     REACT_APP_DEV_API_KEY: ${{ secrets.REACT_APP_DEV_API_KEY}}
      #     REACT_APP_DEV_AUTH_DOMAIN: ${{ secrets.REACT_APP_DEV_AUTH_DOMAIN}}
      #     REACT_APP_DEV_DATABASE_URL: = ${{ secrets.REACT_APP_DEV_DATABASE_URL}}
      #     REACT_APP_DEV_PROJECT_ID: = ${{ secrets.REACT_APP_DEV_PROJECT_ID}}
      #     REACT_APP_DEV_STORAGE_BUCKET: = ${{ secrets.REACT_APP_DEV_STORAGE_BUCKET}}
      #     REACT_APP_DEV_MESSAGING_SENDERID: = ${{ secrets.REACT_APP_DEV_MESSAGING_SENDERID}}
      #     REACT_APP_DEV_APP_ID: ${{ secrets.REACT_APP_DEV_APP_ID}}
      #     REACT_APP_DEV_MEASUREMENT_ID:  ${{ secrets.REACT_APP_DEV_MEASUREMENT_ID}}

      #     REACT_APP_PROD_API: ${{ secrets.REACT_APP_PROD_API}}
      #     REACT_APP_PROD_CHAT: ${{ secrets.REACT_APP_PROD_CHAT}}
      #     ## Firebase
      #     REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY}}
      #     REACT_APP_AUTH_DOMAIN: ${{ secrets.REACT_APP_AUTH_DOMAIN}}
      #     REACT_APP_DATABASE_URL: ${{ secrets.REACT_APP_DATABASE_URL}}
      #     REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID}}
      #     REACT_APP_STORAGE_BUCKET: ${{ secrets.REACT_APP_STORAGE_BUCKET}}
      #     REACT_APP_MESSAGING_SENDERID: ${{ secrets.REACT_APP_MESSAGING_SENDERID}}
      #     REACT_APP_APP_ID: ${{ secrets.REACT_APP_APP_ID}}
      #     REACT_APP_MEASUREMENT_ID: ${{ secrets.REACT_APP_MEASUREMENT_ID}}
      #     REACT_APP_KAKAO_KEY: ${{ secrets.REACT_APP_KAKAO_KEY}}
      #     REACT_APP_GOOGLE_KEY: ${{ secrets.REACT_APP_GOOGLE_KEY}}
      #     DEV_BUCKET: ${{ secrets.DEV_BUCKET}}
      #     ##oauth
      #     REACT_APP_DEV_KAKAO_KEY: ${{ secrets.REACT_APP_DEV_KAKAO_KEY}}
      #     REACT_APP_DEV_OAUTH_KAKAO_KEY: ${{ secrets.REACT_APP_DEV_OAUTH_KAKAO_KEY}}
      #     REACT_APP_DEV_OAUTH_GOOGLE_KEY: ${{ secrets.REACT_APP_DEV_OAUTH_GOOGLE_KEY}}
      #   run: |
      #     echo "REACT_APP_DEV_API=$REACT_APP_DEV_API 
      #     REACT_APP_DEV_CHAT=$REACT_APP_DEV_CHAT 

      #     REACT_APP_PROD_API=$REACT_APP_PROD_API 
      #     REACT_APP_PROD_CHAT=$REACT_APP_PROD_CHAT 
      #     ## Firebase
      #     REACT_APP_API_KEY=$REACT_APP_API_KEY
      #     REACT_APP_AUTH_DOMAIN=$REACT_APP_AUTH_DOMAIN
      #     REACT_APP_DATABASE_URL=$REACT_APP_DATABASE_URL
      #     REACT_APP_PROJECT_ID=$REACT_APP_PROJECT_ID
      #     REACT_APP_STORAGE_BUCKET=$REACT_APP_STORAGE_BUCKET
      #     REACT_APP_MESSAGING_SENDERID=$REACT_APP_MESSAGING_SENDERID
      #     REACT_APP_APP_ID=$REACT_APP_APP_ID
      #     REACT_APP_MEASUREMENT_ID=$REACT_APP_MEASUREMENT_ID
      #     REACT_APP_KAKAO_KEY=$REACT_APP_KAKAO_KEY
      #     REACT_APP_GOOGLE_KEY=$REACT_APP_GOOGLE_KEY
      #     DEV_BUCKET=$DEV_BUCKET
      #     ##oauth
      #     REACT_APP_DEV_KAKAO_KEY=$REACT_APP_DEV_KAKAO_KEY
      #     REACT_APP_DEV_OAUTH_KAKAO_KEY=$REACT_APP_DEV_OAUTH_KAKAO_KEY
      #     REACT_APP_DEV_OAUTH_GOOGLE_KEY=$REACT_APP_DEV_OAUTH_GOOGLE_KEY" >> .env

      - name: pwd
        run: pwd

      - name: .env파일 만들기2
        run: |
          touch .env
          echo REACT_APP_DEV_API=${{ secrets.REACT_APP_DEV_API}}>> .env
          echo REACT_APP_DEV_CHAT=${{ secrets.REACT_APP_DEV_CHAT}}>> .env

          echo REACT_APP_PROD_API=${{ secrets.REACT_APP_PROD_API}}>> .env 
          echo REACT_APP_PROD_CHAT=${{ secrets.REACT_APP_PROD_CHAT}}>> .env 

          echo REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY}}>> .env
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.REACT_APP_AUTH_DOMAIN}}>> .env
          echo REACT_APP_DATABASE_URL=${{ secrets.REACT_APP_DATABASE_URL}}>> .env
          echo REACT_APP_PROJECT_ID=${{ secrets.REACT_APP_PROJECT_ID}}>> .env
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.REACT_APP_STORAGE_BUCKET}}>> .env
          echo REACT_APP_MESSAGING_SENDERID=${{ secrets.REACT_APP_MESSAGING_SENDERID}}>> .env
          echo REACT_APP_APP_ID=${{ secrets.REACT_APP_APP_ID}}>> .env
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.REACT_APP_MEASUREMENT_ID}}>> .env
          echo REACT_APP_KAKAO_KEY=${{ secrets.REACT_APP_KAKAO_KEY}}>> .env
          echo REACT_APP_GOOGLE_KEY=${{ secrets.REACT_APP_GOOGLE_KEY}}>> .env
          echo DEV_BUCKET=${{ secrets.DEV_BUCKET}}>> .env

          echo REACT_APP_DEV_KAKAO_KEY=${{ secrets.REACT_APP_DEV_KAKAO_KEY}}>> .env
          echo REACT_APP_DEV_OAUTH_KAKAO_KEY=${{ secrets.REACT_APP_DEV_OAUTH_KAKAO_KEY}}>> .env
          echo REACT_APP_DEV_OAUTH_GOOGLE_KEY=${{ secrets.REACT_APP_DEV_OAUTH_GOOGLE_KEY}} >> .env

      - name: env 파일 보기
        run: cat .env
      # 목록 보기

      - name: list
        run: ls -la
        

          # REACT_APP_DEV_API: ${{ secrets.REACT_APP_DEV_API}}
          # REACT_APP_DEV_CHAT: ${{ secrets.REACT_APP_DEV_CHAT}}

          # REACT_APP_DEV_API_KEY: ${{ secrets.REACT_APP_DEV_API_KEY}}
          # REACT_APP_DEV_AUTH_DOMAIN: ${{ secrets.REACT_APP_DEV_AUTH_DOMAIN}}
          # REACT_APP_DEV_DATABASE_URL: = ${{ secrets.REACT_APP_DEV_DATABASE_URL}}
          # REACT_APP_DEV_PROJECT_ID: = ${{ secrets.REACT_APP_DEV_PROJECT_ID}}
          # REACT_APP_DEV_STORAGE_BUCKET: = ${{ secrets.REACT_APP_DEV_STORAGE_BUCKET}}
          # REACT_APP_DEV_MESSAGING_SENDERID: = ${{ secrets.REACT_APP_DEV_MESSAGING_SENDERID}}
          # REACT_APP_DEV_APP_ID: ${{ secrets.REACT_APP_DEV_APP_ID}}
          # REACT_APP_DEV_MEASUREMENT_ID:  ${{ secrets.REACT_APP_DEV_MEASUREMENT_ID}}

          # REACT_APP_PROD_API: ${{ secrets.REACT_APP_PROD_API}}
          # REACT_APP_PROD_CHAT: ${{ secrets.REACT_APP_PROD_CHAT}}

          # REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY}}
          # REACT_APP_AUTH_DOMAIN: ${{ secrets.REACT_APP_AUTH_DOMAIN}}
          # REACT_APP_DATABASE_URL: ${{ secrets.REACT_APP_DATABASE_URL}}
          # REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID}}
          # REACT_APP_STORAGE_BUCKET: ${{ secrets.REACT_APP_STORAGE_BUCKET}}
          # REACT_APP_MESSAGING_SENDERID: ${{ secrets.REACT_APP_MESSAGING_SENDERID}}
          # REACT_APP_APP_ID: ${{ secrets.REACT_APP_APP_ID}}
          # REACT_APP_MEASUREMENT_ID: ${{ secrets.REACT_APP_MEASUREMENT_ID}}
          # REACT_APP_KAKAO_KEY: ${{ secrets.REACT_APP_KAKAO_KEY}}
          # REACT_APP_GOOGLE_KEY: ${{ secrets.REACT_APP_GOOGLE_KEY}}
          # DEV_BUCKET: ${{ secrets.DEV_BUCKET}}

          # REACT_APP_DEV_KAKAO_KEY: ${{ secrets.REACT_APP_DEV_KAKAO_KEY}}
          # REACT_APP_DEV_OAUTH_KAKAO_KEY: ${{ secrets.REACT_APP_DEV_OAUTH_KAKAO_KEY}}
          # REACT_APP_DEV_OAUTH_GOOGLE_KEY: ${{ secrets.REACT_APP_DEV_OAUTH_GOOGLE_KEY}}

      - name: env cmd 설치
        run: npm install -g env-cmd
      # - name: script g 설치
      #   run: npm install -g react-scripts

      - name:  build            # 빌드시작
        # run: env-cmd -f .env react-scripts build
        run: npm run build
                
      
      # - name: gh설치
      #   run: yarn add gh-pages
        # working-directory: ${{ env.working-directory }}  
      
      # - name: gh확인
      #   run: gh-pages -v
      # - name: gh올리기
      #   run: gh-pages -d ${{ env.working-directory }}/dist

      - name: aws 버전확인
        run: aws --version

      - name: aws help
        run: aws help


      - name: aws help2
        run: aws s3 help

      - name: aws config
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws configure list

      # - name: aws 버킷리스트
      #   run: aws --endpoint-url=https://kr.object.ncloudstorage.com --region kr-standard  s3 ls  
      - name: aws 버킷 리스트
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws --endpoint-url=https://kr.object.ncloudstorage.com s3 ls


      - name: aws 오브젝트 리스트
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws --endpoint-url=https://kr.object.ncloudstorage.com s3 ls s3://palda-action-build

      - name: aws 오브젝트 리스트2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws --endpoint-url=https://kr.object.ncloudstorage.com s3api list-objects --bucket palda-action-build


      # cp확인
      - name: 현재 위치 확인
        run: pwd
      # 목록 확인
      - name: 목룍 확인
        run: ls -l

      # ncloude 에 배포하기 테스트
      - name: Deploy                  
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws --endpoint-url=https://kr.object.ncloudstorage.com  \
            s3 cp --recursive ./build s3://palda-action-build